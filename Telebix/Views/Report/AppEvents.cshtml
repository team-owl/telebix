@model IEnumerable<Telebix.Models.AppEvent>

@{
    ViewData["Title"] = "Scan Event Log";
}

<div class="container-fluid">
    <div class="row">
        <partial name="_ReportNav" />

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">@ViewData["Title"]</h1>
                <partial name="_ShareExport" />
            </div>
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
                <table class="table" width="100%">
                    <thead class="thead-dark">
                        <tr>
                            <th width="40%">
                                Clinic Name / User ID
                            </th>
                            <th width="20%" style="text-align:center">
                                # Successful
                            </th>
                            <th width="20%" style="text-align:center">
                                # Failed
                            </th>
                            <th width="20%" style="text-align:center">
                                Failure Rate
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            //Group results by clinic
                            var groups = Model
                                .GroupBy(e => e.ClinicName)
                                .Select(g => new
                                {
                                    Name = g.Key,
                                    Successful = g.Count(e => e.Success == true),
                                    Failed = g.Count(e => e.Success == false)
                                })
                                .OrderBy(g => g.Name);

                        }

                        @foreach (var clinicGroup in groups)
                        {
                            string clinicId = clinicGroup.Name.Replace(" ", "_");

                            <tr style="font-weight:bold;" data-toggle="collapse" data-target="#@clinicId" class="clinicRow">
                                <td>@clinicGroup.Name</td>
                                <td style="text-align:center">@clinicGroup.Successful</td>
                                <td style="text-align:center">@clinicGroup.Failed</td>
                                <td style="text-align:center">
                                    @{ double pct = (double)clinicGroup.Failed / (clinicGroup.Successful + clinicGroup.Failed); }
                                    @String.Format("{0:0.0%}", pct)
                                </td>
                            </tr>
                                <tr>
                                    <td colspan="4" style="padding:0">
                                        <div id="@clinicId" class="collapse">
                                        @{
                                                var phones = Model
                                                    .Where(e => e.ClinicName == clinicGroup.Name)
                                                    .GroupBy(e => e.UserId)
                                                    .Select(g => new
                                                    {
                                                        Name = g.Key,
                                                        Device = g.Min(e => e.PhoneId),
                                                        Successful = g.Count(e => e.Success == true),
                                                        Failed = g.Count(e => e.Success == false)
                                                    });

                                            }
                                            <table class="table-striped" width="100%">
                                                @foreach (var phoneGroup in phones)
                                                {
                                                    <tr>
                                                        <td width="40%">&nbsp;&nbsp;Device @phoneGroup.Device (UID: @phoneGroup.Name)</td>
                                                        <td width="20%" style="text-align:center">@phoneGroup.Successful</td>
                                                        <td width="20%" style="text-align:center">@phoneGroup.Failed</td>
                                                        <td width="20%" style="text-align:center">
                                                            @{ double pct2 = (double)phoneGroup.Failed / (phoneGroup.Successful + phoneGroup.Failed); }
                                                            @String.Format("{0:0.0%}", pct2)
                                                        </td>
                                                    </tr>
                                                }

                                            </table>
                                        </div>
                                    </td>
                                </tr>
                        }

                    </tbody>
                </table>

            </div>
        </main>
    </div>
</div>

