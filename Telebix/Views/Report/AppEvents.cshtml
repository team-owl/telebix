@model IEnumerable<Telebix.Models.AppEvent>

@{
    ViewData["Title"] = "Scan Event Log";
}

<div class="container-fluid">
    <div class="row">
        <partial name="_ReportNav" />

        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">@ViewData["Title"]</h1>
                <partial name="_ShareExport" />
            </div>
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">
                <ul>
                    <li><b>Date Range:</b>&nbsp;2019-05-01&nbsp;<b>to</b>&nbsp;2019-05-31</li>
                    <li><b>Clinics:</b>&nbsp;(All)</li>

                </ul>
            </div>

                <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">


                    @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#detailModal">
                    Launch demo modal
                </button>*@


                    <table class="table" width="100%">
                        <thead class="thead-dark">
                            <tr>
                                <th width="40%">
                                    Clinic Name / User ID
                                </th>
                                <th width="20%" style="text-align:center">
                                    # Successful
                                </th>
                                <th width="20%" style="text-align:center">
                                    # Failed
                                </th>
                                <th width="20%" style="text-align:center">
                                    Failure Rate
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                //Group results by clinic
                                var groups = Model
                                    .GroupBy(e => e.ClinicName)
                                    .Select(g => new
                                    {
                                        Name = g.Key,
                                        Successful = g.Count(e => e.Success == true),
                                        Failed = g.Count(e => e.Success == false)
                                    })
                                    .OrderBy(g => g.Name);

                            }

                            @foreach (var clinicGroup in groups)
                            {
                                string clinicId = clinicGroup.Name.Replace(" ", "_");

                                <tr style="font-weight:bold;" data-toggle="collapse" data-target="#@clinicId" class="clinicRow">
                                    <td>@clinicGroup.Name</td>
                                    <td style="text-align:center">@clinicGroup.Successful</td>
                                    <td style="text-align:center">@clinicGroup.Failed</td>
                                    <td style="text-align:center">
                                        @{ double pct = (double)clinicGroup.Failed / (clinicGroup.Successful + clinicGroup.Failed); }
                                        @String.Format("{0:0.0%}", pct)
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="4" style="padding:0">
                                        <div id="@clinicId" class="collapse">
                                            @{
                                                var phones = Model
                                                    .Where(e => e.ClinicName == clinicGroup.Name)
                                                    .GroupBy(e => e.UserId)
                                                    .OrderBy(e => e.Min(f => f.PhoneId))
                                                    .Select(g => new
                                                    {
                                                        Name = g.Key,
                                                        Device = g.Min(e => e.PhoneId),
                                                        Successful = g.Count(e => e.Success == true),
                                                        Failed = g.Count(e => e.Success == false)
                                                    });

                                            }
                                            <table class="table-striped" width="100%">
                                                @foreach (var phoneGroup in phones)
                                                {
                                                    <tr data-toggle="modal" data-target="#detailModal" data-phoneid="@phoneGroup.Device" class="phoneRow">
                                                        <td width="40%">&nbsp;&nbsp;Device @phoneGroup.Device (UID: @phoneGroup.Name.Substring(0, 8))</td>
                                                        <td width="20%" style="text-align:center">@phoneGroup.Successful</td>
                                                        <td width="20%" style="text-align:center">@phoneGroup.Failed</td>
                                                        <td width="20%" style="text-align:center">
                                                            @{ double pct2 = (double)phoneGroup.Failed / (phoneGroup.Successful + phoneGroup.Failed); }
                                                            @String.Format("{0:0.0%}", pct2)
                                                        </td>
                                                    </tr>
                                                }

                                            </table>
                                        </div>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>

                </div>
        </main>
    </div>
</div>

<div class="modal fade" id="detailModal" tabindex="-1" role="dialog" aria-labelledby="detailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Device Detail</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    $('#detailModal').on('show.bs.modal', function (event) {
        var phoneId = $(event.relatedTarget).data('phoneid');
        var detailUrl = "./Phone/" + phoneId;
        var modal = $(this);
        modal.find('.modal-title').text("Device " + phoneId + " Detail")
        $('#modal-body').html('...');       //clear the content in case it loads slowly
        $.get(detailUrl, function (data, status) {
            $('#modal-body').html(data);
            if (status !== "success") {
                alert("Failed to load " + detailUrl);
            }
        });
    })
</script>